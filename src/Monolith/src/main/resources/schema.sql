-- -----------------------------------------------------
-- Catalog
-- -----------------------------------------------------
drop schema if exists ec_catalog cascade;
create schema ec_catalog;

-- product_category
create table if not exists ec_catalog.product_category
(
    id            bigint generated by default as identity (start with 100) not null,
    category_name varchar(255)                                             not null,
    primary key (id)
);

-- product
create table if not exists ec_catalog.product
(
    id             bigint generated by default as identity (start with 1000) not null,
    dealer_id      bigint                                                    not null,
    sku            varchar(64)                                               not null,
    category_id    bigint                                                    not null,
    name           varchar(255)                                              not null,
    description    varchar(255)                                              null,
    unit_price     decimal(13, 2)                                            null,
    image_url      varchar(255)                                              null,
    active         boolean                                                   not null,
    units_in_stock bigint                                                    not null,
    date_created   timestamp with time zone                                  null,
    last_updated   timestamp with time zone                                  null,
    primary key (id),
    constraint un_product_dealer_sku unique (dealer_id, sku),
    constraint fk_product_category
        foreign key (category_id) references product_category (id),
    constraint fk_product_dealer
        foreign key (dealer_id) references ec_identity.dealer (id)
);

-- product_review
create table if not exists ec_catalog.product_review
(
    id         bigint generated by default as identity (start with 1000) not null,
    product_id bigint                                                    not null,
    user_id    bigint                                                    not null,
    user_alias varchar(100)                                              not null,
    text       varchar(255)                                              not null,
    primary key (id),
    constraint fk_review_product foreign key (product_id) references product (id),
    constraint fk_review_user foreign key (user_id) references ec_identity.user (id)
);


-- -----------------------------------------------------
-- Identity
-- -----------------------------------------------------
drop schema if exists ec_identity cascade;
create schema ec_identity;

-- dealer
create table if not exists ec_identity.dealer
(
    id   bigint generated by default as identity (start with 100) not null,
    name varchar(100)                                             not null,
    constraint un_dealer_name unique (name),
    primary key (id)
);

-- user
create table if not exists ec_identity.user
(
    id                      bigint generated by default as identity (start with 1000) not null,
    username                varchar(50)                                               not null,
    password                varchar(50)                                               not null,
    account_non_expired     boolean                                                   not null,
    account_non_locked      boolean                                                   not null,
    credentials_non_expired boolean                                                   not null,
    enabled                 boolean                                                   not null,
    dealer_id               bigint                                                    null,
    primary key (id),
    constraint un_user_username unique (username),
    constraint fk_user_dealer
        foreign key (dealer_id) references dealer (id)
);

-- role
create table if not exists ec_identity.role
(
    id   bigint generated by default as identity (start with 100) not null,
    name varchar(100)                                             not null,
    primary key (id),
    constraint un_role_name unique (name)
);

-- authority
create table if not exists ec_identity.authority
(
    id         bigint generated by default as identity (start with 100) not null,
    permission varchar(100)                                             not null,
    primary key (id),
    constraint un_authority_permission unique (permission)
);

-- role_authority
create table if not exists ec_identity.role_authority
(
    id           bigint generated by default as identity not null,
    role_id      bigint                                  not null,
    authority_id bigint                                  not null,
    primary key (id),
    constraint un_role_authority unique (role_id, authority_id),
    constraint fk_role_authority_role
        foreign key (role_id) references role (id),
    constraint fk_role_authority_authority
        foreign key (authority_id) references authority (id)
);

-- user_role
create table if not exists ec_identity.user_role
(
    id      bigint generated by default as identity not null,
    user_id bigint                                  not null,
    role_id bigint                                  not null,
    primary key (id),
    constraint un_user_role unique (user_id, role_id),
    constraint fk_user_role_user
        foreign key (user_id) references ec_identity.user (id),
    constraint fk_user_role_role
        foreign key (role_id) references role (id)
);
